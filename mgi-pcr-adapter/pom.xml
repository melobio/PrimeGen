<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mgi</groupId>
    <artifactId>mgi-pcr-adapter</artifactId>
    <version>1.0.0</version>
    <modules>
        <module>cloud-pacs-common</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <project.encoding>UTF-8</project.encoding>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <java.version>1.8</java.version>

        <!-- 核心依赖 -->
        <spring-boot.version>2.7.12</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.4.0</spring-cloud-alibaba.version>

        <!--分离出这两个东西，是为了能够在 spring cloud alibaba不更新的时候，及时更新-->
        <seata.version>1.5.2</seata.version>
        <nacos.version>1.4.1</nacos.version>

        <!-- 次要依赖 -->
        <mysql-connector-java.version>8.0.27</mysql-connector-java.version>
        <shiro.version>1.10.0</shiro.version>
        <hutool-version>5.6.0</hutool-version>
        <mybatis-spring-boot-starter.version>2.1.4</mybatis-spring-boot-starter.version>
        <mybatis-plus.version>3.4.1</mybatis-plus.version>
        <pagehelper-spring-boot-starter.version>1.4.5</pagehelper-spring-boot-starter.version>
        <spring-javaformat.version>0.0.22</spring-javaformat.version>
        <lombok.version>1.16.16</lombok.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>
        <fastjson.version>2.0.14</fastjson.version>
        <druid.version>1.2.12</druid.version>
        <dynamic-ds.version>3.5.2</dynamic-ds.version>
        <knife4j.version>3.0.2</knife4j.version>
        <dcm4che.version>5.24.0</dcm4che.version>
        <jsoup.version>1.13.1</jsoup.version>
        <map.version>1.4.2.Final</map.version>
        <commons.fileupload.version>1.5</commons.fileupload.version>
        <commons.beanutils.version>1.9.4</commons.beanutils.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 核心依赖 -->
            <!--spring boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.alibaba</groupId>
                        <artifactId>druid</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter-test</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- MapStruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- knife4j 依赖配置 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- dcm4che -->
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-core</artifactId>
                <version>${dcm4che.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>

            <!-- Jwt相关 -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>5.4.5</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>0.10.7</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>0.10.7</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>0.10.7</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.spring.javaformat</groupId>
                <artifactId>spring-javaformat-maven-plugin</artifactId>
                <version>${spring-javaformat.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <!--使用 mvn clean package -Pprod 进行激活prod环境的配置，否则激活默认环境-->
        <!-- 开发 -->
        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活配置-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--当前环境-->
                <profile.name>dev</profile.name>
                <!--配置文件前缀-->
                <prefix.name>mgi</prefix.name>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
                <config.namespace></config.namespace>
                <!--Nacos配置中心地址-->
                <config.server-addr>127.0.0.1:8848</config.server-addr>
                <!--Nacos服务发现地址-->
                <discovery.server-addr>127.0.0.1:8848</discovery.server-addr>
                <!--Nacos配置分组名称-->
                <config.group>DEFAULT_GROUP</config.group>
                <!-- Nacos 账户名 -->
                <config.nacos.username>nacos</config.nacos.username>
                <!-- Nacos 账户密码 -->
                <config.nacos.password>mgi123456!@#</config.nacos.password>
                <discovery.nacos.ip></discovery.nacos.ip>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.nacos.port>${server.port}</discovery.nacos.port>
            </properties>
        </profile>

        <!-- 测试 -->
        <profile>
            <id>test</id>
            <properties>
                <!--当前环境-->
                <profile.name>test</profile.name>
                <!--配置文件前缀-->
                <prefix.name>mgi</prefix.name>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
                <config.namespace>test</config.namespace>
                <!--Nacos配置中心地址-->
                <config.server-addr>127.0.0.1:8848</config.server-addr>
                <!--Nacos服务发现地址-->
                <discovery.server-addr>127.0.0.1:8848</discovery.server-addr>
                <!--Nacos配置分组名称-->
                <config.group>DEFAULT_GROUP</config.group>
                <!-- Nacos 账户名 -->
                <config.nacos.username>nacos</config.nacos.username>
                <!-- Nacos 账户密码 -->
                <config.nacos.password>mgi123456!@#</config.nacos.password>
                <discovery.nacos.ip></discovery.nacos.ip>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.nacos.port>${server.port}</discovery.nacos.port>
            </properties>
        </profile>

        <!-- 生产 -->
        <profile>
            <id>prod</id>
            <properties>
                <!--当前环境,生产环境为空-->
                <profile.name>prod</profile.name>
                <!--配置文件前缀-->
                <prefix.name>mgi</prefix.name>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
                <config.namespace>prod</config.namespace>
                <!--Nacos配置中心地址-->
                <config.server-addr>127.0.0.1:8848</config.server-addr>
                <!--Nacos服务发现地址-->
                <discovery.server-addr>127.0.0.1:8848</discovery.server-addr>
                <!--Nacos配置分组名称-->
                <config.group>DEFAULT_GROUP</config.group>
                <!-- Nacos 账户名 -->
                <config.nacos.username>nacos</config.nacos.username>
                <!-- Nacos 账户密码 -->
                <config.nacos.password>nacos</config.nacos.password>
                <discovery.nacos.ip></discovery.nacos.ip>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.nacos.port>${server.port}</discovery.nacos.port>
            </properties>
        </profile>

        <!-- Docker -->
        <profile>
            <id>docker</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <profile.name>${PROFILES:prod}</profile.name>
                <!--suppress UnresolvedMavenProperty -->
                <config.namespace>${NACOS_NAMESPACE}</config.namespace>
                <!--suppress UnresolvedMavenProperty -->
                <config.server-addr>${NACOS_SERVER_ADDR}</config.server-addr>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.server-addr>${NACOS_SERVER_ADDR}</discovery.server-addr>
                <!--suppress UnresolvedMavenProperty -->
                <config.group>${NACOS_GROUP}</config.group>
                <!--suppress UnresolvedMavenProperty -->
                <config.nacos.username>${NACOS_USERNAME}</config.nacos.username>
                <!--suppress UnresolvedMavenProperty -->
                <config.nacos.password>${NACOS_PASSWORD}</config.nacos.password>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.nacos.ip>${NACOS_DISCOVERY_IP}</discovery.nacos.ip>
                <!--suppress UnresolvedMavenProperty -->
                <discovery.nacos.port>${NACOS_DISCOVERY_PORT}</discovery.nacos.port>
            </properties>
        </profile>
    </profiles>

</project>
