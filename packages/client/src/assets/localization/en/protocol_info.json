{
  "all_protocols": "All Protocols",
  "browse_protocol_library": "Open Protocol Library",
  "cancel_run": "Cancel Run",
  "choose_file": "Choose File...",
  "choose_protocol_file": "Choose File",
  "choose_snippet_type": "Choose the Labware Offset Data Python Snippet based on target execution environment.",
  "continue_proceed_to_calibrate": "Proceed to Calibrate",
  "continue_verify_calibrations": "Verify pipette and labware calibrations",
  "create_or_download": "Create or download a new protocol",
  "creation_method": "Creation Method",
  "custom_labware_not_supported": "Robot doesn't support custom labware",
  "date_added": "Date Added",
  "delete_protocol_from_app": "Delete the protocol, make changes to address the error, and resend the protocol to this robot from the Opentrons App.",
  "delete_protocol": "Delete protocol",
  "description": "Description",
  "drag_file_here": "Drag and drop protocol file here",
  "error_analyzing": "<block>An error occurred while attempting to analyze <bold>{{protocolName}}.</bold></block>",
  "error_message_no_steps": "This protocol has no steps in it - there's nothing for your robot to do! Your protocol needs at least one aspirate/dispense to import properly",
  "estimated_run_time": "Estimated Run Time",
  "exit_modal_body": "Are you sure you want to close this protocol?",
  "exit_modal_exit": "Yes, close now",
  "exit_modal_go_back": "No, go back",
  "exit_modal_heading": "Confirm Close Protocol",
  "failed_analysis": "failed analysis",
  "get_labware_offset_data": "Get Labware Offset Data",
  "import_a_file": "Import a protocol to get started",
  "import_new_protocol": "Import a Protocol",
  "import": "Import",
  "instrument_cal_data_title": "Calibration data",
  "instrument_not_attached": "Not attached",
  "instruments_title": "Required Pipettes",
  "intervention_modal_learn_more": "Learn more about user interventions",
  "invalid_file_type": "Invalid file type. Protocols must be '.py' or '.json'.",
  "invalid_json_file": "Invalid JSON file.",
  "labware_cal_description": "Calibrated offset from labware origin point",
  "labware_legacy_definition": "N/A",
  "labware_offset_data_title": "Labware Offset data",
  "labware_offsets_info": "{{number}} Labware Offsets",
  "labware_position_check_complete_toast_no_offsets": "Labware Position Check complete. No Labware Offsets created.",
  "labware_position_check_complete_toast_with_offsets_plural": "Labware Position Check complete. {{count}} Labware Offsets created.",
  "labware_position_check_complete_toast_with_offsets": "Labware Position Check complete. {{count}} Labware Offset created.",
  "labware_title": "Required Labware",
  "last_run": "Last Run",
  "last_updated": "Last Updated",
  "launch_protocol_designer": "Open Protocol Designer",
  "manual_steps_learn_more": "Learn more about manual steps",
  "modules_title": "Required Modules",
  "most_recent_updates": "Most recent updates",
  "no_history": "No run history",
  "no_labware_offset_data": "No Labware Offset data",
  "no_protocol_yet": "Don't have a protocol yet?",
  "nothing_here_yet": "No protocols to show!",
  "oldest_updates": "Oldest updates",
  "open_a_protocol": "Open a protocol to get started",
  "open_api_docs": "Open Python API Documentation",
  "organization_and_author": "Organization/Author",
  "pin_protocol": "Pin protocol",
  "pinned_protocol": "Pinned protocol",
  "pinned_protocols": "Pinned Protocols",
  "protocol_added": "Successfully received {{protocol_name}}",
  "protocol_analysis_failed": "protocol analysis failed",
  "protocol_finishing": "Finishing Protocol On {{robot_name}}",
  "protocol_loading": "Opening Protocol On {{robot_name}}",
  "protocol_name_title": "Protocol Name",
  "protocol_title": "Protocol - {{protocol_name}}",
  "protocol_upload_failed": "Protocol upload failed. Fix the error and try again",
  "protocols": "Protocols",
  "required_cal_data_title": "Calibration Data",
  "required_quantity_title": "Quantity",
  "required_type_title": "Type",
  "rerunning_protocol_modal_body": "<block>Opentrons displays the connected robot’s last protocol run on on the Protocol Upload page. If you run again, Opentrons loads this protocol and applies Labware Offset data if any exists.</block><block>Clicking “Run Again” will take you directly to the Run tab. If you’d like to review the deck setup or run Labware Position Check before running the protocol, navigate to the Protocol tab.</block><block>If you recalibrate your robot, it will clear the last run from the upload page. A run can have the following statuses:</block><block><list><strong>Not started:</strong> when this protocol was loaded on to the robot, it was closed before the user ran it</list></block><block><list><strong>Canceled:</strong> when this protocol was loaded on to the robot, it was canceled before the run completed</list></block><block><list><strong>Complete:</strong> when this protocol was loaded on to the robot, it was closed after the protocol run completed</list></block>",
  "rerunning_protocol_modal_header": "How Rerunning A Protocol Works",
  "rerunning_protocol_modal_link": "Learn more about Labware Offset Data",
  "rerunning_protocol_modal_title": "See How Rerunning a Protocol Works",
  "robot_name_last_run": "{{robot_name}}’s last run",
  "robot_type_first": "{{robotType}} protocols first",
  "run_again": "Run again",
  "run_protocol": "Run protocol",
  "run_timestamp_title": "Run timestamp",
  "send_a_protocol_to_store": "Send a protocol from the Opentrons App to get started.",
  "simulation_in_progress": "Simulation in Progress",
  "timestamp": "+{{index}}",
  "too_many_pins_body": "Remove a protocol in order to add more protocols to your pinned list.",
  "too_many_pins_header": "You've hit your max!",
  "unpin_protocol": "Unpin protocol",
  "unpinned_protocol": "Unpinned protocol",
  "update_robot_for_custom_labware": "You have custom labware definitions saved to your app, but this robot needs to be updated before you can use these definitions with Python protocols",
  "upload_and_simulate": "Open a protocol to run on {{robot_name}}",
  "valid_file_types": "Valid file types: Python files (.py) or Protocol Designer files (.json)"
}
