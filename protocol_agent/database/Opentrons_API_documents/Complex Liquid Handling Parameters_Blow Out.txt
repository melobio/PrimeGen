
There are two parameters that control whether and where the pipette blows out liquid. The `blow_out` parameter accepts a Boolean value. When `True`, the pipette blows out remaining liquid when the tip is empty or only contains the disposal volume. The `blowout_location` parameter controls in which of three locations these blowout actions occur. The default blowout location is the trash. Blowout behavior is different for each complex command.

| Method          | Blowout behavior and location                                |
| :-------------- | :----------------------------------------------------------- |
| `transfer()`    | Blow out after each dispense.Valid locations: `"trash"`, `"source well"`, `"destination well"` |
| `distribute()`  | Blow out after the final dispense.Valid locations: `"trash"`, `"source well"` |
| `consolidate()` | Blow out after the only dispense.Valid locations: `"trash"`, `"destination well"` |

For example, this transfer command will blow out liquid in the trash twice, once after each dispense into a destination well:

```python
pipette.transfer(
    volume=100,
    source=[plate["A1"], plate["A2"]],
    dest=[plate["B1"], plate["B2"]],
    blow_out=True,
)
```

*New in version 2.0.*

Set `blowout_location` when you don’t want to waste any liquid by blowing it out into the trash. For example, you may want to make sure that every last bit of a sample is moved into a destination well. Or you may want to return every last bit of an expensive reagent to the source for use in later pipetting.

If you need to blow out in a different well, or at a specific location within a well, use the [blow out building block command](https://docs.opentrons.com/v2/basic_commands/liquids.html#blow-out) instead.

When setting a blowout location, you *must* also set `blow_out=True`, or the location will be ignored:

```python
pipette.transfer(
    volume=100,
    source=plate["A1"],
    dest=plate["B1"],
    blow_out=True,  # required to set location
    blowout_location="destination well",
)
```

*New in version 2.8.*

With `transfer()`, the pipette will not blow out at all if you only set `blowout_location`.

`blow_out=True` is also required for distribute commands that blow out by virtue of having a disposal volume:

```python
pipette.distribute(
    volume=100,
    source=plate["A1"],
    dest=[plate["B1"], plate["B2"]],
    disposal_volume=50,  # causes blow out
    blow_out=True,       # still required to set location!
    blowout_location="source well",
)
```

With `distribute()`, the pipette will still blow out if you only set `blowout_location`, but in the default location of the trash.

> Note:
>
> If the tip already contains liquid before the complex command, the default blowout location will shift away from the trash. `transfer()` and `distribute()` shift to the source well, and `consolidate()` shifts to the destination well. For example, this transfer command will blow out in well B1 because it’s the source:
>
> ```python
> pipette.pick_up_tip()
> pipette.aspirate(100, plate["A1"])
> pipette.transfer(
>     volume=100,
>     source=plate["B1"],
>     dest=plate["C1"],
>     new_tip="never",
>     blow_out=True,
>     # no blowout_location
> )
> pipette.drop_tip()
> ```
>
> This only occurs when you aspirate and then perform a complex command with `new_tip="never"` and `blow_out=True`.



