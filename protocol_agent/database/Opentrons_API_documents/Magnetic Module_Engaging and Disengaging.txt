
Raise and lower the module’s magnets with the [`engage()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.MagneticModuleContext.engage) and [`disengage()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.MagneticModuleContext.disengage) functions, respectively.

If your loaded labware is fully compatible with the Magnetic Module, you can call `engage()` with no argument:

> ```python
> mag_mod.engage()
> ```
>
> *New in version 2.0.*

This will move the magnets upward to the default height for the labware, which should be close to the bottom of the labware’s wells. If your loaded labware doesn’t specify a default height, this will raise an `ExceptionInProtocolError`.

For certain applications, you may want to move the magnets to a different height. The recommended way is to use the `height_from_base` parameter, which represents the distance above the base of the labware (its lowest point, where it rests on the module). Setting `height_from_base=0` should move the tops of the magnets level with the base of the labware. Alternatively, you can use the `offset` parameter, which represents the distance above *or below* the labware’s default position (close to the bottom of its wells). Like using `engage()` with no argument, this will raise an error if there is no default height for the loaded labware.

> Note:
>
> There is up to 1 mm of manufacturing variance across Magnetic Module units, so observe the exact position and adjust as necessary before running your protocol.

Here are some examples of where the magnets will move when using the different parameters in combination with the loaded NEST PCR plate, which specifies a default height of 20 mm:

> ```python
> mag_mod.engage(height_from_base=13.5)  # 13.5 mm
> mag_mod.engage(offset=-2)              # 15.5 mm
> ```

Note that `offset` takes into account the fact that the magnets’ home position is measured as −2.5 mm for GEN2 modules.

> *New in version 2.0.*
>
> *Changed in version 2.2:* Added the `height_from_base` parameter.

When you need to retract the magnets back to their home position, call [`disengage()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.MagneticModuleContext.disengage).

> ```python
> mag_mod.disengage()  # -2.5 mm
> ```

*New in version 2.0.*

If at any point you need to check whether the magnets are engaged or not, use the [`status`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.MagneticModuleContext.status) property. This will return either the string `engaged` or `disengaged`, not the exact height of the magnets.

> Note:
>
> The OT-2 will not automatically deactivate the Magnetic Module at the end of a protocol. If you need to deactivate the module after a protocol is completed or canceled, use the Magnetic Module controls on the device detail page in the Opentrons App or run `deactivate()` in Jupyter notebook.

