
Complex liquid handling commands combine multiple [building block commands](https://docs.opentrons.com/v2/new_atomic_commands.html#v2-atomic-commands) into a single method call. These commands make it easier to handle larger groups of wells and repeat actions without having to write your own control flow code. They integrate tip-handling behavior and can pick up, use, and drop multiple tips depending on how you want to handle your liquids. They can optionally perform other actions, like adding air gaps, knocking droplets off the tip, mixing, and blowing out excess liquid from the tip.

There are three complex liquid handling commands, each optimized for a different liquid handling scenario:

- [`InstrumentContext.transfer()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.transfer)
- [`InstrumentContext.distribute()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.distribute)
- [`InstrumentContext.consolidate()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.consolidate)



Pages in this section of the documentation cover:

- [Sources and Destinations](https://docs.opentrons.com/v2/complex_commands/sources_destinations.html#complex-source-dest): Which wells complex commands aspirate from and dispense to.
- [Order of Operations](https://docs.opentrons.com/v2/complex_commands/order_operations.html#complex-command-order): The order of basic commands that are part of a complex commmand.
- [Complex Liquid Handling Parameters](https://docs.opentrons.com/v2/complex_commands/parameters.html#complex-params): Additional keyword arguments that affect complex command behavior.

Code samples throughout these pages assume that youâ€™ve loaded the pipettes and labware from the [basic protocol template](https://docs.opentrons.com/v2/new_examples.html#protocol-template).