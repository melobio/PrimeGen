
The Flex 1-Channel 50 µL and Flex 8-Channel 50 µL pipettes must operate in a low-volume mode to accurately dispense very small volumes of liquid. Set the volume mode by calling [`InstrumentContext.configure_for_volume()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.configure_for_volume) with the amount of liquid you plan to aspirate, in µL:

```
pipette50.configure_for_volume(1)
pipette50.pick_up_tip()
pipette50.aspirate(1, plate["A1"])
```

*New in version 2.15.*

Passing different values to `configure_for_volume()` changes the minimum and maximum volume of Flex 50 µL pipettes as follows:

| Value | Minimum Volume (µL) | Maximum Volume (µL) |
| :---- | :------------------ | :------------------ |
| 1–4.9 | 1                   | 30                  |
| 5–50  | 5                   | 50                  |

> Note:
>
> The pipette must not contain liquid when you call `configure_for_volume()`, or the API will raise an error.
>
> Also, if the pipette is in a well location that may contain liquid, it will move upward to ensure it is not immersed in liquid before changing its mode. Calling `configure_for_volume()` *before* `pick_up_tip()` helps to avoid this situation.
>
> In a protocol that handles many different volumes, it’s a good practice to call `configure_for_volume()` once for each [`transfer()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.transfer) or [`aspirate()`](https://docs.opentrons.com/v2/new_protocol_api.html#opentrons.protocol_api.InstrumentContext.aspirate), specifying the volume that you are about to handle. When operating with a list of volumes, nest `configure_for_volume()` inside a `for` loop to ensure that the pipette is properly configured for each volume:

```
volumes = [1, 2, 3, 4, 1, 5, 2, 8]
sources = plate.columns()[0]
destinations = plate.columns()[1]
for i in range(8):
    pipette50.configure_for_volume(volumes[i])
    pipette50.pick_up_tip()
    pipette50.aspirate(volume=volumes[i], location=sources[i])
    pipette50.dispense(location=destinations[i])
    pipette50.drop_tip()
```

If you know that all your liquid handling will take place in a specific mode, then you can call `configure_for_volume()` just once with a representative volume. Or if all the volumes correspond to the pipette’s default mode, you don’t have to call `configure_for_volume()` at all.